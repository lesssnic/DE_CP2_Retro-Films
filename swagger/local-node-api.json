swagger: "2.0"
info:
  description: "This is a Node server."
  version: "1.0.0"
  title: "Swagger Retro Films Project"
host: "localhost:3001"
basePath: "/"
schemes:
- "http"
paths:
  /user/sign_up:
    post:
      tags:
      - "user"
      summary: "sign_up"
      description: ""
      operationId: "sign_up"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Create user"
        required: true
        schema:
          $ref: "#/definitions/sign-up"
      responses:
        "200":
          description: "User created"
        "400":
          description: "Bad request, wrong data"
        "406":
          description: "User alreade exists"
  /user/sign_in:
    post:
      tags:
      - "user"
      summary: "sign_in"
      description: ""
      operationId: "sign_in"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Create user"
        required: true
        schema:
          $ref: "#/definitions/sign-in"
      responses:
        "201":
          description: "Access granted"
        "400":
          description: "Bad request, wrong data"
        "401":
          description: "Wrong login or password"
  /genres:
    get:
      tags:
      - "genres"
      summary: "Get genres"
      description: ""
      operationId: "Get genres"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        type: "string"
        description: "token"
        required: true
      responses:
        "200":
          description: "OK"
        "401":
          description: "Not Auth"
  /languages:
    get:
      tags:
      - "languages"
      summary: "Get languages"
      description: ""
      operationId: "Get languages"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        type: "string"
        description: "token"
        required: true
      responses:
        "200":
          description: "OK"
        "401":
          description: "Not Auth"
  /movie:
    get:
      tags:
      - "movie"
      summary: "Get movie by ID"
      description: ""
      operationId: "Get movie by ID"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        type: "string"
        description: "token"
        required: true
      - in: "query"
        name: "id"
        type: "number"
        description: "ID of movie to return"
        required: true
        format: "int64"
      responses:
        "200":
          description: "OK"
        "401":
          description: "Not Auth"
  /movies:
    get:
      tags:
      - "movie"
      summary: "Get movie by filter"
      description: ""
      operationId: "Get movie by filter"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        type: "string"
        description: "token"
        required: true
      - in: "query"
        name: "adult"
        type: "boolean"
        description: "false"
      - in: "query"
        name: "page"
        type: "number"
        description: "0"
      - in: "query"
        name: "pre_page"
        type: "number"
        description: "20"
      - in: "query"
        name: "budget_min"
        type: "number"
        description: "100000"
      - in: "query"
        name: "budget_max"
        type: "number"
        description: "2000000"
      - in: "query"
        name: "language"
        type: "string"
        description: "en"
      - in: "query"
        name: "title"
        type: "string"
        description: "Mortal Combat"
      - in: "query"
        name: "popularity_min"
        type: "number"
        description: "0"
      - in: "query"
        name: "popularity_max"
        type: "number"
        description: "10000"
      - in: "query"
        name: "release_date_first"
        type: "string"
        description: "2015-12-27"
      - in: "query"
        name: "release_date_last"
        type: "string"
        description: "2021-12-27"
      - in: "query"
        name: "revenue_min"
        type: "number"
        description: "201500"
      - in: "query"
        name: "revenue_max"
        type: "number"
        description: "981500"
      - in: "query"
        name: "status"
        type: "string"
        enum: ["Rumored", "Planned", "In Production", "Post Production", "Released", "Canceled"]
      responses:
        "200":
          description: "OK"
        "401":
          description: "Not Auth"
  /review:
    get:
      tags:
      - "review"
      summary: "Get review by ID"
      description: ""
      operationId: "Get review by ID"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        type: "string"
        description: "token"
        required: true
      - in: "query"
        name: "id"
        type: "number"
        description: "ID of movie to reviews return"
        required: true
        format: "int64"
      responses:
        "200":
          description: "OK"
        "401":
          description: "Not Auth"
    post:
      tags:
      - "review"
      summary: "Create review"
      description: ""
      operationId: "Create review"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        type: "string"
        description: "token"
        required: true
      - in: "body"
        name: "body"
        description: "Create review"
        required: true
        schema:
          $ref: "#/definitions/review-create"
      responses:
        "200":
          description: "Review created"
        "406":
          description: "Bad request, wrong data, movie not exists"
        "500":
          description: "Base error"
    put:
      tags:
      - "review"
      summary: "Update review"
      description: ""
      operationId: "Update review"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        type: "string"
        description: "token"
        required: true
      - in: "body"
        name: "body"
        description: "Update review"
        required: true
        schema:
          $ref: "#/definitions/review-update"
      responses:
        "200":
          description: "Review updated"
        "400":
          description: "Bad request, wrong data"
    delete:
      tags:
      - "review"
      summary: "Delete review by ID"
      description: ""
      operationId: "Delete review by ID"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        type: "string"
        description: "token"
        required: true
      - in: "query"
        name: "id"
        type: "number"
        description: "ID of review to delete"
        required: true
        format: "int64"
      responses:
        "200":
          description: "OK"
        "401":
          description: "Not Auth"

definitions:
  sign-in:
    type: "object"
    properties:
      login:
        type: "string"
      password:
        type: "string"
  sign-up:
    type: "object"
    properties:
      first_name:
        type: "string"
      last_name:
        type: "string"
      login:
        type: "string"
      password:
        type: "string"
  review-create:
    type: "object"
    properties:
      movie_id:
        type: "number"
      content:
        type: "string"
  review-update:
    type: "object"
    properties:
      review_id:
        type: "number"
      content:
        type: "string"


externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
